# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    #container:
      #image: google/dart:latest
      
    steps:
    - uses: actions/checkout@v2 
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.x'
        channel: 'any'
    - run: flutter pub get
    - run: flutter test
  
  build_deploy:
    runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run.
    #needs: [drive_ios,drive_android,test]
    name: Build  apk  and web
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'
          channel: 'any'
      # This action sets up a java environment
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      #enable linux,macos,windows   and  web
      - run: flutter  config --enable-web
      - run: flutter  config --enable-linux-desktop
      #- run: flutter  config --enable-macos-desktop
      - run: flutter  config --enable-windows-desktop
      - run: flutter pub get
      # build macOS desktop version
      #- run: flutter build macos --release
      # build Android version
      #- run: flutter build apk --debug --split-per-abi
      # This action will create a github release and optionally upload an artifact to it.
      # https://github.com/ncipollo/release-action
      # build Flutter web version
      - run: flutter build web
      # Handle the deploy process of your project to GitHub Pages.
      # https://github.com/JamesIves/github-pages-deploy-action
      - uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          BASE_BRANCH: master
          BRANCH: gh-pages
          FOLDER: build/web
